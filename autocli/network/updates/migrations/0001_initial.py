# Generated by Django 4.1 on 2022-09-05 21:19

from django.db import migrations, models
import django.db.models.deletion
import network.all.base_model.validators.base_validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tags', '0001_initial'),
        ('inventory', '0003_alter_device_options_alter_device_credential_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Snapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Object create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='object last update date.', verbose_name='Updated')),
                ('deleted', models.BooleanField(default=False, help_text='Is object deleted.', verbose_name='Deleted')),
                ('root', models.BooleanField(default=False, help_text='Root object cannot be deleted.', verbose_name='Root')),
                ('active', models.BooleanField(default=True, help_text='Object status.', verbose_name='Active')),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 3 to 64 digits, letters or special characters -, _ or spaces.', 'null': 'Name field is mandatory.', 'unique': 'Object with this name already exists.'}, help_text='Object name.', max_length=64, unique=True, validators=[network.all.base_model.validators.base_validators.NameValueValidator()], verbose_name='Name')),
                ('description', models.CharField(blank=True, default='Object default description.', error_messages={'invalid': 'Enter the correct description value. It must contain 8 to 256 digits, letters and special characters -, _, . or spaces.'}, help_text='Object description.', max_length=256, null=True, validators=[network.all.base_model.validators.base_validators.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='Object graphical representation.', verbose_name='Object ico')),
                ('tag', models.ManyToManyField(blank=True, help_text='Related tags.', to='tags.tag', verbose_name='Tag')),
            ],
            options={
                'verbose_name': 'Snapshot',
                'verbose_name_plural': 'Snapshots',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Update',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Object create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='object last update date.', verbose_name='Updated')),
                ('deleted', models.BooleanField(default=False, help_text='Is object deleted.', verbose_name='Deleted')),
                ('root', models.BooleanField(default=False, help_text='Root object cannot be deleted.', verbose_name='Root')),
                ('active', models.BooleanField(default=True, help_text='Object status.', verbose_name='Active')),
                ('status', models.IntegerField(choices=[(0, 'Initiation'), (1, 'Successfully collected data'), (2, 'Data collection failed')], default=0, help_text='Device update status.', verbose_name='Update status')),
                ('result_status', models.BooleanField(default=False, help_text='A positive result means that all commands updates was collected.', verbose_name='Result status')),
                ('device', models.ForeignKey(help_text='The network device affected by the update.', on_delete=django.db.models.deletion.CASCADE, to='inventory.device', verbose_name='Device')),
                ('snapshot', models.ForeignKey(blank=True, help_text='Correlated snapshot.', null=True, on_delete=django.db.models.deletion.CASCADE, to='updates.snapshot', verbose_name='Snapshot')),
            ],
            options={
                'verbose_name': 'Update',
                'verbose_name_plural': 'Update',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='CollectedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Object create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='object last update date.', verbose_name='Updated')),
                ('deleted', models.BooleanField(default=False, help_text='Is object deleted.', verbose_name='Deleted')),
                ('root', models.BooleanField(default=False, help_text='Root object cannot be deleted.', verbose_name='Root')),
                ('active', models.BooleanField(default=True, help_text='Object status.', verbose_name='Active')),
                ('result_status', models.BooleanField(default=False, help_text='A positive result means that the command output was successfully received and processed.', verbose_name='Result status')),
                ('raw_data_status', models.BooleanField(default=False, help_text='A positive result means that the raw data collection process has been successfully completed.', verbose_name='Raw data status')),
                ('processed_data_status', models.BooleanField(default=False, help_text='A positive result means that the process of processing the data was completed successfully.', verbose_name='Processed data status')),
                ('command_name', models.CharField(help_text='CLI command name.', max_length=64, verbose_name='Command name')),
                ('command_raw_data', models.TextField(blank=True, help_text='CLI command raw data output.', null=True, verbose_name='Command raw data')),
                ('command_processed_data', models.JSONField(blank=True, help_text='CLI command FSM process data.', null=True, verbose_name='Command processed data')),
                ('update', models.ForeignKey(help_text='Correlated update model.', on_delete=django.db.models.deletion.CASCADE, to='updates.update', verbose_name='Update model')),
            ],
            options={
                'verbose_name': 'Collected data',
                'verbose_name_plural': 'Collected data',
                'ordering': ['id'],
            },
        ),
    ]
