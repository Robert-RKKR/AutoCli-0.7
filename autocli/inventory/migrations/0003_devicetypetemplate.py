# Generated by Django 4.1 on 2022-08-06 20:27

import core.base_model.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0002_group_alter_device_secret_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceTypeTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deleted', models.BooleanField(default=False, help_text='Is object deleted.', verbose_name='Deleted')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Object create date.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='object last update date.', verbose_name='Updated')),
                ('root', models.BooleanField(blank=True, help_text='Root object cannot be deleted.', null=True, verbose_name='Root')),
                ('active', models.BooleanField(blank=True, help_text='Object status.', null=True, verbose_name='Active')),
                ('name', models.CharField(error_messages={'blank': 'Name field is mandatory.', 'invalid': 'Enter the correct name value. It must contain 3 to 32 digits, letters or special characters -, _ or spaces.', 'null': 'Name field is mandatory.', 'unique': 'Object with this name already exists.'}, help_text='Object name.', max_length=32, unique=True, validators=[core.base_model.validators.NameValueValidator()], verbose_name='Name')),
                ('description', models.CharField(default='Object default description.', error_messages={'invalid': 'Enter the correct description value. It must contain 8 to 256 digits, letters and special characters -, _, . or spaces.'}, help_text='Object description.', max_length=256, validators=[core.base_model.validators.DescriptionValueValidator()], verbose_name='Description')),
                ('ico', models.IntegerField(default=1, help_text='Object graphical representation.', verbose_name='Object ico')),
                ('color', models.IntegerField(blank=True, help_text='Color object mark.', null=True, verbose_name='Object color')),
                ('command', models.CharField(blank=True, help_text='CLI command that will be executed on network device.', max_length=32, null=True, verbose_name='CLI command')),
                ('sfm_expression', models.TextField(blank=True, help_text='SFM expression used to check if CLI command/s output is correct.', null=True, verbose_name='SFM expression')),
                ('device_type', models.ForeignKey(help_text='Type of network device system.', on_delete=django.db.models.deletion.PROTECT, to='inventory.devicetype', verbose_name='Device type')),
            ],
            options={
                'verbose_name': 'Device type template',
                'verbose_name_plural': 'Device type templates',
                'unique_together': {('command', 'device_type')},
            },
            managers=[
                ('active_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
