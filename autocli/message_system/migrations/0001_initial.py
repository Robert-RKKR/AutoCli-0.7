# Generated by Django 4.1 on 2022-08-11 18:52

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_name', models.CharField(help_text='Object name.', max_length=128, verbose_name='Name')),
                ('model_name', models.CharField(help_text='Object name.', max_length=128, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Content type',
                'verbose_name_plural': 'Content types',
                'unique_together': {('app_name', 'model_name')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Time of the change creation.', verbose_name='Timestamp')),
                ('object_id', models.IntegerField(blank=True, help_text='Correlated object ID representation.', null=True, verbose_name='Object ID')),
                ('type', models.IntegerField(choices=[(1, 'CRITICAL'), (2, 'ERROR'), (3, 'WARNING'), (4, 'INFO'), (5, 'DEBUG')], help_text='Type of notification message.', verbose_name='Notification type')),
                ('message', models.CharField(help_text='Notification message.', max_length=128, verbose_name='Message')),
                ('content_type', models.ForeignKey(blank=True, help_text='Administrator responsible for change.', null=True, on_delete=django.db.models.deletion.PROTECT, to='message_system.contenttype', verbose_name='Content type')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Time of the log creation.', verbose_name='Timestamp')),
                ('object_id', models.IntegerField(blank=True, help_text='Correlated object ID representation.', null=True, verbose_name='Object ID')),
                ('application', models.CharField(help_text='Name of the application which triggered the log.', max_length=64, verbose_name='Application')),
                ('code_id', models.CharField(blank=True, help_text='ID indicating the location of the log call in the code.', max_length=64, null=True, verbose_name='Code ID')),
                ('task_id', models.CharField(blank=True, help_text='ID of the task associated with the log.', max_length=64, null=True, verbose_name='Task ID')),
                ('severity', models.IntegerField(choices=[(1, 'CRITICAL'), (2, 'ERROR'), (3, 'WARNING'), (4, 'INFO'), (5, 'DEBUG')], help_text='Log severity.', verbose_name='Severity')),
                ('message', models.CharField(help_text='Log message.', max_length=128, verbose_name='Message')),
                ('execution', models.FloatField(blank=True, help_text='Log task completion time.', null=True, verbose_name='Execution time')),
                ('content_type', models.ForeignKey(blank=True, help_text='Administrator responsible for change.', null=True, on_delete=django.db.models.deletion.PROTECT, to='message_system.contenttype', verbose_name='Content type')),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Logs',
            },
        ),
        migrations.CreateModel(
            name='Extension',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Extension name.', max_length=32, verbose_name='Name')),
                ('data', models.TextField(help_text='Extension data.', verbose_name='Data')),
                ('log', models.ForeignKey(help_text='Log corelate with log extension.', on_delete=django.db.models.deletion.CASCADE, to='message_system.log', verbose_name='Log')),
            ],
            options={
                'verbose_name': 'Extension',
                'verbose_name_plural': 'Extensions',
            },
        ),
        migrations.CreateModel(
            name='ChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Time of the change creation.', verbose_name='Timestamp')),
                ('object_id', models.IntegerField(help_text='Correlated object ID representation.', verbose_name='Object ID')),
                ('action', models.IntegerField(choices=[(0, '---'), (1, 'Create'), (2, 'Update'), (3, 'Delete')], default=0, help_text='The action that was performed on a given model.', verbose_name='Change log action')),
                ('after', models.JSONField(blank=True, help_text='JSON object representation after changes was made, and saved to database.', null=True, verbose_name='JSON object representation')),
                ('administrator', models.ForeignKey(blank=True, help_text='Administrator responsible for change.', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Administrator')),
                ('content_type', models.ForeignKey(help_text='Administrator responsible for change.', on_delete=django.db.models.deletion.PROTECT, to='message_system.contenttype', verbose_name='Content type')),
            ],
            options={
                'verbose_name': 'Change log',
                'verbose_name_plural': 'Change logs',
            },
        ),
    ]
